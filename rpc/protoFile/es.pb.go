// Code generated by protoc-gen-go. DO NOT EDIT.
// source: es.proto

package protoFile

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status 枚举状态
type ESReply_Status int32

const (
	ESReply_OK   ESReply_Status = 0
	ESReply_FAIL ESReply_Status = 1
)

var ESReply_Status_name = map[int32]string{
	0: "OK",
	1: "FAIL",
}

var ESReply_Status_value = map[string]int32{
	"OK":   0,
	"FAIL": 1,
}

func (x ESReply_Status) String() string {
	return proto.EnumName(ESReply_Status_name, int32(x))
}

func (ESReply_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_718db5c20d0f3738, []int{1, 0}
}

//请求体
type ESRequest struct {
	Method               string            `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Param                map[string]string `protobuf:"bytes,2,rep,name=param,proto3" json:"param,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ESRequest) Reset()         { *m = ESRequest{} }
func (m *ESRequest) String() string { return proto.CompactTextString(m) }
func (*ESRequest) ProtoMessage()    {}
func (*ESRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_718db5c20d0f3738, []int{0}
}

func (m *ESRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ESRequest.Unmarshal(m, b)
}
func (m *ESRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ESRequest.Marshal(b, m, deterministic)
}
func (m *ESRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ESRequest.Merge(m, src)
}
func (m *ESRequest) XXX_Size() int {
	return xxx_messageInfo_ESRequest.Size(m)
}
func (m *ESRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ESRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ESRequest proto.InternalMessageInfo

func (m *ESRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *ESRequest) GetParam() map[string]string {
	if m != nil {
		return m.Param
	}
	return nil
}

//返回数据
type ESReply struct {
	Code                 ESReply_Status `protobuf:"varint,3,opt,name=code,proto3,enum=protoFile.ESReply_Status" json:"code,omitempty"`
	Message              string         `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Data                 []*Article     `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ESReply) Reset()         { *m = ESReply{} }
func (m *ESReply) String() string { return proto.CompactTextString(m) }
func (*ESReply) ProtoMessage()    {}
func (*ESReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_718db5c20d0f3738, []int{1}
}

func (m *ESReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ESReply.Unmarshal(m, b)
}
func (m *ESReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ESReply.Marshal(b, m, deterministic)
}
func (m *ESReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ESReply.Merge(m, src)
}
func (m *ESReply) XXX_Size() int {
	return xxx_messageInfo_ESReply.Size(m)
}
func (m *ESReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ESReply.DiscardUnknown(m)
}

var xxx_messageInfo_ESReply proto.InternalMessageInfo

func (m *ESReply) GetCode() ESReply_Status {
	if m != nil {
		return m.Code
	}
	return ESReply_OK
}

func (m *ESReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ESReply) GetData() []*Article {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("protoFile.ESReply_Status", ESReply_Status_name, ESReply_Status_value)
	proto.RegisterType((*ESRequest)(nil), "protoFile.ESRequest")
	proto.RegisterMapType((map[string]string)(nil), "protoFile.ESRequest.ParamEntry")
	proto.RegisterType((*ESReply)(nil), "protoFile.ESReply")
}

func init() { proto.RegisterFile("es.proto", fileDescriptor_718db5c20d0f3738) }

var fileDescriptor_718db5c20d0f3738 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x97, 0xae, 0xeb, 0xb6, 0x37, 0x26, 0xe3, 0x31, 0x24, 0xf6, 0xe2, 0xe8, 0x41, 0x76,
	0xb1, 0x87, 0x8a, 0x30, 0xf4, 0x34, 0x65, 0x43, 0x51, 0x50, 0xda, 0x9b, 0xb7, 0xd8, 0x3e, 0xb4,
	0xd8, 0x36, 0xb5, 0x4d, 0x07, 0xfd, 0x3f, 0xc4, 0xbf, 0x57, 0x9a, 0xce, 0x4d, 0xd4, 0x53, 0xde,
	0xf7, 0xde, 0x97, 0x5f, 0x92, 0x2f, 0x30, 0xa0, 0xd2, 0xcd, 0x0b, 0xa9, 0x24, 0x0e, 0xf5, 0xb2,
	0x8e, 0x13, 0xb2, 0xc7, 0xa2, 0x50, 0x71, 0x98, 0x50, 0x3b, 0x71, 0x3e, 0x18, 0x0c, 0x57, 0x81,
	0x4f, 0xef, 0x15, 0x95, 0x0a, 0x0f, 0xc1, 0x4a, 0x49, 0xbd, 0xca, 0x88, 0xb3, 0x19, 0x9b, 0x0f,
	0xfd, 0xad, 0xc2, 0x73, 0xe8, 0xe5, 0xa2, 0x10, 0x29, 0x37, 0x66, 0xdd, 0xf9, 0xc8, 0x3b, 0x76,
	0x77, 0x3c, 0x77, 0xb7, 0xd9, 0x7d, 0x6c, 0x1c, 0xab, 0x4c, 0x15, 0xb5, 0xdf, 0xba, 0xed, 0x05,
	0xc0, 0xbe, 0x89, 0x13, 0xe8, 0xbe, 0x51, 0xbd, 0x25, 0x37, 0x25, 0x4e, 0xa1, 0xb7, 0x11, 0x49,
	0x45, 0xdc, 0xd0, 0xbd, 0x56, 0x5c, 0x18, 0x0b, 0xe6, 0x7c, 0x32, 0xe8, 0x37, 0xe4, 0x3c, 0xa9,
	0xf1, 0x14, 0xcc, 0x50, 0x46, 0xc4, 0xbb, 0x33, 0x36, 0x3f, 0xf0, 0x8e, 0x7e, 0x9d, 0x9d, 0x27,
	0xb5, 0x1b, 0x28, 0xa1, 0xaa, 0xd2, 0xd7, 0x36, 0xe4, 0xd0, 0x4f, 0xa9, 0x2c, 0xc5, 0x0b, 0x71,
	0x53, 0x63, 0xbf, 0x25, 0x9e, 0x80, 0x19, 0x09, 0x25, 0x78, 0x4f, 0x3f, 0x02, 0x7f, 0x80, 0x96,
	0x6d, 0x26, 0xbe, 0x9e, 0x3b, 0x36, 0x58, 0x2d, 0x11, 0x2d, 0x30, 0x1e, 0xee, 0x26, 0x1d, 0x1c,
	0x80, 0xb9, 0x5e, 0xde, 0xde, 0x4f, 0x98, 0x77, 0xd3, 0xc4, 0x15, 0x50, 0xb1, 0x89, 0x43, 0xc2,
	0x4b, 0x18, 0x5f, 0xcb, 0x34, 0xad, 0xb2, 0x38, 0x14, 0x2a, 0x96, 0x19, 0x4e, 0xff, 0x0b, 0xc6,
	0xc6, 0xbf, 0x57, 0x76, 0x3a, 0x57, 0xa3, 0xa7, 0xfd, 0xaf, 0x3c, 0x5b, 0xba, 0x3c, 0xfb, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0xcf, 0x59, 0xf3, 0x73, 0xb3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ESServiceClient is the client API for ESService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ESServiceClient interface {
	Communication(ctx context.Context, in *ESRequest, opts ...grpc.CallOption) (*ESReply, error)
}

type eSServiceClient struct {
	cc *grpc.ClientConn
}

func NewESServiceClient(cc *grpc.ClientConn) ESServiceClient {
	return &eSServiceClient{cc}
}

func (c *eSServiceClient) Communication(ctx context.Context, in *ESRequest, opts ...grpc.CallOption) (*ESReply, error) {
	out := new(ESReply)
	err := c.cc.Invoke(ctx, "/protoFile.ESService/Communication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ESServiceServer is the server API for ESService service.
type ESServiceServer interface {
	Communication(context.Context, *ESRequest) (*ESReply, error)
}

func RegisterESServiceServer(s *grpc.Server, srv ESServiceServer) {
	s.RegisterService(&_ESService_serviceDesc, srv)
}

func _ESService_Communication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ESRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ESServiceServer).Communication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoFile.ESService/Communication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ESServiceServer).Communication(ctx, req.(*ESRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ESService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoFile.ESService",
	HandlerType: (*ESServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Communication",
			Handler:    _ESService_Communication_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "es.proto",
}
